{"ast":null,"code":"var _jsxFileName = \"/home/cricoiot/Documents/Supply-Blockchain/supply-chain-web/src/components/PlaceOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaceOrder({\n  contract,\n  accounts\n}) {\n  _s();\n  const [productIds, setProductIds] = useState([]);\n  const [quantities, setQuantities] = useState([]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const totalCost = await contract.methods.placeOrder(productIds, quantities).call({\n      from: accounts[0]\n    });\n    await contract.methods.placeOrder(productIds, quantities).send({\n      from: accounts[0],\n      value: totalCost\n    });\n    alert(\"Order placed successfully!\");\n    setProductIds([]);\n    setQuantities([]);\n  };\n  const addProduct = () => {\n    setProductIds([...productIds, 0]);\n    setQuantities([...quantities, 0]);\n  };\n  const updateProductId = (index, value) => {\n    const newProductIds = [...productIds];\n    newProductIds[index] = value;\n    setProductIds(newProductIds);\n  };\n  const updateQuantity = (index, value) => {\n    const newQuantities = [...quantities];\n    newQuantities[index] = value;\n    setQuantities(newQuantities);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [productIds.map((productId, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Product ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: productId,\n            onChange: e => updateProductId(index, parseInt(e.target.value)),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: quantities[index],\n            onChange: e => updateQuantity(index, parseInt(e.target.value)),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addProduct,\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(PlaceOrder, \"kvuByvGqtdM6SYf5b+IjmQWzKLQ=\");\n_c = PlaceOrder;\nexport default PlaceOrder;\nvar _c;\n$RefreshReg$(_c, \"PlaceOrder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PlaceOrder","contract","accounts","_s","productIds","setProductIds","quantities","setQuantities","handleSubmit","event","preventDefault","totalCost","methods","placeOrder","call","from","send","value","alert","addProduct","updateProductId","index","newProductIds","updateQuantity","newQuantities","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","productId","type","onChange","e","parseInt","target","required","onClick","_c","$RefreshReg$"],"sources":["/home/cricoiot/Documents/Supply-Blockchain/supply-chain-web/src/components/PlaceOrder.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction PlaceOrder({ contract, accounts }) {\n  const [productIds, setProductIds] = useState([]);\n  const [quantities, setQuantities] = useState([]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const totalCost = await contract.methods.placeOrder(productIds, quantities).call({ from: accounts[0] });\n    await contract.methods.placeOrder(productIds, quantities).send({ from: accounts[0], value: totalCost });\n    alert(\"Order placed successfully!\");\n    setProductIds([]);\n    setQuantities([]);\n  };\n\n  const addProduct = () => {\n    setProductIds([...productIds, 0]);\n    setQuantities([...quantities, 0]);\n  };\n\n  const updateProductId = (index, value) => {\n    const newProductIds = [...productIds];\n    newProductIds[index] = value;\n    setProductIds(newProductIds);\n  };\n\n  const updateQuantity = (index, value) => {\n    const newQuantities = [...quantities];\n    newQuantities[index] = value;\n    setQuantities(newQuantities);\n  };\n\n  return (\n    <div>\n      <h2>Place Order</h2>\n      <form onSubmit={handleSubmit}>\n        {productIds.map((productId, index) => (\n          <div key={index}>\n            <label>\n              Product ID:\n              <input\n                type=\"number\"\n                value={productId}\n                onChange={(e) => updateProductId(index, parseInt(e.target.value))}\n                required\n              />\n            </label>\n            <label>\n              Quantity:\n              <input\n                type=\"number\"\n                value={quantities[index]}\n                onChange={(e) => updateQuantity(index, parseInt(e.target.value))}\n                required\n              />\n            </label>\n          </div>\n        ))}\n        <button type=\"button\" onClick={addProduct}>\n          Add Product\n        </button>\n        <button type=\"submit\">Place Order</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PlaceOrder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}